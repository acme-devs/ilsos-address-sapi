<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="api-test-suite.xml" />
	
	<munit:test name="NoTokenFoundCase"  description="NoTokenFoundCase">
		<munit:execution >
			<flow-ref doc:name="Flow-ref to api-main"  name="get:\addresses:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" 
			 expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("")]'/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="TokenFoundCase"  description="tokenFoundCase">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="os:retrieve">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS Token Retrieve from Object Store" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when"  processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS Address Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('uspsgetaddresstest/backendOutput.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event">
				<munit:payload value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to api-main"  name="get:\addresses:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" 
			 expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("street")]'/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="400BadRequestCase"  description="400BadRequestCase">
		<munit:execution >
			<munit:set-event doc:name="Set Event">
				<munit:payload value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GAAA", "zipCode": "30005"}}]' />
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
			
		</munit:set-event>
			<flow-ref doc:name="Flow-ref to api-main"  name="get:\addresses:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that"  
			expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("")]'/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="tokenGenerationFlowCase" description="tokenGenerationFlowCase">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS HTTP Token Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" processor="os:store">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS Token Store " attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["token-qwertyuiolkhjgfsdcvbnmkjhdfcvghbnjk"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:payload value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GAAA", "zipCode": "30005"}}]' />
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
			
		</munit:set-event>
			<flow-ref doc:name="Flow-ref to usps-authentication" name="usps-authentication"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" 
			expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("token")]'/>
		</munit:validation>
	</munit:test>
	
	<munit:test name="apiKitRouterCase" description="apiKitRouterCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:listener" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/api/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:variables >
					<munit:variable key="city" value="Huston" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to usps-authentication" name="api-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" expression="#[vars.city]" is='#[MunitTools::notNullValue()]' />
		</munit:validation>
	</munit:test>
	
	<munit:test name="apiKitConsoleCase" description="apiKitConsoleCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:listener" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:variables >
					<munit:variable key="city" value="Huston" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to usps-authentication" name="api-console" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" expression="#[vars.city]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="apiKitBadRequestCase" description="apiKitBadRequestCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:listener" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:variables >
					<munit:variable key="city" value="Huston" />
				</munit:variables>
			</munit:set-event>
			<try doc:name="Try" >
				<flow-ref doc:name="Flow-ref to usps-authentication" name="api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" expression="#[vars.city]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="apiKitNotFoundCase" description="apiKitNotFoundCase">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" processor="http:listener">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="api-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock" processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<munit:set-event doc:name="Set Event" >
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:variables>
					<munit:variable key="city" value="Huston" />
				</munit:variables>
			</munit:set-event>
			<try doc:name="Try" >
				<flow-ref doc:name="Flow-ref to usps-authentication" name="api-main" />
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue"/>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" expression="#[vars.city]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="apiKitMethodNotAllowedCase" description="apiKitMethodNotAllowedCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:listener" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:variables >
					<munit:variable key="city" value="Huston" />
				</munit:variables>
			</munit:set-event>
			<try doc:name="Try" >
				<flow-ref doc:name="Flow-ref to usps-authentication" name="api-main" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" expression="#[vars.city]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="errorTokenGenerationFlowCase" description="errorTokenGenerationFlowCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS HTTP Token Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["token"]' />
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" >
				<munit:payload value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GAAA", "zipCode": "30005"}}]' />
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to usps-authentication" name="usps-authentication" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" 
			expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("token")]' />
		</munit:validation>
	</munit:test>
	
	<munit:test name="usps-uthenticationErrorCase"  description="usps-uthenticationErrorCase" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS Token Retrieve from Object Store" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when1" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="USPS Address Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('uspsgetaddresstest/backendOutput.json')]" mediaType="application/json" />
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
				<munit:attributes value='#[{ "queryParams": {"street": "831 christopher robin rd" , "city": "alpharetta", "state": "GA", "zipCode": "30005"}}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to api-main"  name="get:\addresses:api-config" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" expression="#[output application/java --- payload.^raw as String]" is='#[MunitTools::containsString("correlationId")]' />
		</munit:validation>
	</munit:test>



</mule>
